qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets =  . ~ drv)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
library(swirl)
swirl()
qplot(displ, hmy, data = mpg, geom = c("point","smooth"), facets = . ~ drv)
qplot(displ, hwy, data = mpg, geom = c("point","smooth"), facets = . ~ drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv) + ggtitle("Swirl Rules")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv) + ggtitle("Swirl Rules!")
g + geom_point(color = "pink", size = 4, alpha = 1/2)
g + geom_point(size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(aes(color = drv)) + labs( title = "Swirl Rules!") + labs(x = "Displacement", y = "Hmy Mileage")
g + geom_point(aes(color = drv)) + labs( title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha = 1/2) + geom_smooth(size = 4, linetype = 3, method = "lm")
g + geom_point(aes(color = drv), size = 2, alpha = 1/2) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type ="l", yylim = c(-3,3))
plot(myx, myy, type ="l", ylim = c(-3,3))
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid( drv ~ cyl, margins = TRUE)
g + geom_point() + facet_grid( drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid( drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
library(swirl)
swirl()
str(diamonds)
qplot
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density". color = cut)
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom = c("point","string"), method = "lm")
qplot(carat, price, data = diamonds, color = cut, geom = c("point","smooth"), method = "lm")
qplot(carat, price, data = diamonds, color = cut, geom = c("point","smooth"), method = "lm")
qplot(carat, price, data = diamonds, color = cut, geom = c("point","smooth"), se = "lm")
qplot(carat, price, data = diamonds, color = cut, geom = c("point","smooth"), set = "lm")
qplot(carat, price, data = diamonds, color = cut, geom = c("point","smooth"))
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method = "lm") + aes(facet_grid(. ~ cut))
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method = "lm") + aes(facet(. ~ cut))
qplot(carat, price, data = diamonds, color = cut, facets = . ~ cut) + geom_smooth(method = "lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,4), na.rm = TRUE)
cutpoints <- quantile(diamonds$carat, seq(0,1,length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price))+ geom_boxplot() + facet_grid(. ~ cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
BodyWeight$Diet
?text
?axis
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
trellis.par.set(p)
trellis.par.set()
?trellis.par.set
par(p)
p
?axis
p
axix(1)
axis(1)
axis(1,1:5)
axis(1, xaxp = c(2,9,7))
g <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
g <- xyplot(Ozone ~ Wind | factor(Month), data = airquality, axis(1))
g <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
g
axis()
axis(1)
axis(1,g)
axis(g)
axis()
print.trellis()
splom()
par(g)
dev.off
dev.off()
par(g)
g <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(g)
?par
q
g
?text
text(5,50, labels = "test")
plot.new()
text(5,50, labels = "test")
?lines
?points
?xyplot
?ltext
library(datasets)
data("airquality")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ as.factor(Month))
factor(airquality$Month)
data("airquality")
airquality$Month
class(airquality$Month)
?transform
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
install.packages("ggplot2movies")
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
summary(movies)
summary(movies$votes)
movies$votes
class(movies$votes)
class(movies$rating)
g + geom_point()
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h = 1.5, col="blue")
abline(h=0.4, col="red")
5
9
12
abline(h=0.5, col="green")
dist(dFsm)
plt(hc)
plot(hc)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy, col=c("red","orange","purple"), pch=3, cex=2, lwd=2)
mdist
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x,y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x,y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x,y, col=kmObj$cluster, pch = 19, cex = 2)
plot(kmObj$centers, col=("black","red","green"), pch = 3, cex = 3, lwd = 3)
points(kmObj$centers, col=("black","red","green"), pch = 3, cex = 3, lwd = 3)
points(kmObj$centers, col=("black","red","green"), pch = 3, cex = 3, lwd = 3)
points(kmObj$centers, col=c("black","red","green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col=kmeans(dataFrame)$cluster, pch =19, cex=2)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch =19, cex=2)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch =19, cex=2)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch =19, cex=2)
library(swirl)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu*diag*t(matv)
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,c(1,2)]
svd2$d
dim(faceData)
(svd1$u[,1]*svd1$d[1])%*%t(svd1$v[,1])
a1<- (svd1$u[,1]*svd1$d[1])%*%t(svd1$v[,1])
myimage(a1)
myImage(a1)
a2<- (svd1$u[,c(1,2)]*diag(svd1$d[c(1,2)]))%*%t(svd1$v[,c(1,2)])
a2<- (svd1$u[,c(1,2)]*diag(svd1$d[c(1,2)]))%*%t(svd1$v[,c(1,2)])
a2<- (svd1$u[,c(1,2)]%*%diag(svd1$d[c(1,2)]))%*%t(svd1$v[,c(1,2)])
a2<- (svd1$u[,1:2]%*%diag(svd1$d[1:2]))%*%t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(swirl)
swirl()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
info()
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist(ssd[,1:3])
mdist <- dist(ssd[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd(scale(sub1[,-c(562,563)]))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(sub1[,10:12], maxCon))
mdist <- dist(sub1[,c(10:12,maxCon)]))
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kclust <- kmeans(sub1[,-c(562:563)], centers = 6)
kclust <- kmeans(sub1[,-c(562,563)], centers = 6)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <-which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch=19)
plot(kClust$centers[laying,1:12], pch=19, ylab= "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch=19, ylab= "Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, '|', fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames)
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1 < 0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(pm1$Date), '%Y%m%d')
dates <- as.Date(as.character(dates), '%Y%m%d')
head(dates)
hist(dates[negative], 'month')
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, (State.Code == 36) & (both %in% county.site))
cnt0 <- subset(pm0, (State.Code == 36) & (county.site %in% both))
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, county.site == 63.2008)
pm0sub <- subset(cnt0, County.Code == 63 $ Site.ID == 2008)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), '%Y%m%d')
dates1 <- as.Date(as.character(pm1sub$Date), '%Y%m%d')
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = )
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2]), xlim = c(.5, 2.5))
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y,]
setwd("~/LuisPeraza/DataScienceSpecialization/ReproducibleResesearch/FinalProject")
source("processing.R")
head(stormdf)
names(stormdf)
table(stormdf$EVTYPE)
unique(stormdf$EVTYPE)
hist(stormdf$FATALITIES)
hist(stormdf$INJURIES)
head(stormdf$INJURIES)
names(stormdf)
library(dplyr)
stormdf<- mutate(stormdf, fataandinjur = FATALITIES + INJURIES)
heathpoulation <- as.data.frame(xtabs(INJURIES + FATALITIES ~ EVTYPE, stormdf))
head(heathpoulation)
heathpoulation <- as.data.frame(xtabs(~ INJURIES + FATALITIES + EVTYPE, stormdf))
head(heathpoulation)
heathpoulation <- as.data.frame(xtabs(EVTYPE ~ INJURIES + FATALITIES, stormdf))
heathpoulation <- as.data.frame(xtabs(INJURIES + FATALITIES ~ EVTYPE, stormdf))
head(heathpoulation)
barplot(heathpoulation)
barplot(heathpoulation$Freq)
which.max(heathpoulation$Freq)
heathpoulation[which.max(heathpoulation$Freq),1]
healthpop <- as.data.frame(xtabs(INJURIES ~ EVTYPE, stormdf))
healthpop[which.max(healthpop$Freq),1]
healthpop <- as.data.frame(xtabs(FATALITIES ~ EVTYPE, stormdf))
healthpop[which.max(healthpop$Freq),1]
names(stormdf)
names(stormdf[,25:28])
head(stormdf[,25:28])
table?
table()?
head?
head()?
head()
?head()
?table
names(stormdf)
damagedf <- ddply(stormdf, "EVTYPE", summarize, sumpropdmg = sum(PROPDMG), sumcropdmg = sum(CROPDMG))
library(dplyr)
?ddply
library(plyr)
damagedf <- ddply(stormdf, "EVTYPE", summarize, sumpropdmg = sum(PROPDMG), sumcropdmg = sum(CROPDMG))
head(damagedf)
healthpop2 <- ddply(stormdf, "EVTYPE", summarize, sumfatal = sum(FATALITIES),
suminj = sum(INJURIES))
head(healthpop2)
which.max(healthpop2$sumfatal)
healthpop2[,834]
healthpop2[834,]
6*3.6*2.20
rm(list = c("healthpop","heathpoulation"))
rm(list = c("healthpop2"))
healthpop <- ddply(stormdf, "EVTYPE", summarize, sumfatal = sum(FATALITIES),
suminj = sum(INJURIES))
damagedf[which.max(damagedf$sumpropdmg),]
damagedf[which.max(damagedf$sumcropdmg),]
healthpop[which.max(healthpop2$sumfatal),]
healthpop[which.max(healthpop2$suminj),]
healthpop[which.max(healthpop$sumfatal),]
healthpop[which.max(healthpop$suminj),]
healthpop[which.max(healthpop$suminj),]
subhealth <- subset(healthpop, suminj > 0.50*healthpop[which.max(healthpop$suminj),])
subhealth <- subset(healthpop, suminj > 0.50*healthpop[which.max(healthpop$suminj),3])
subhealth <- subset(healthpop, suminj > 0.20*healthpop[which.max(healthpop$suminj),3])
subhealth
subhealth <- subset(healthpop, suminj > 0.10*healthpop[which.max(healthpop$suminj),3])
subhealth <- subset(healthpop, suminj > 0.05*healthpop[which.max(healthpop$suminj),3])
subhealth
91346*0.05
library(dplyr)
library(plyr)
library(ggplot2)
ggplot(subhealth, aes(EVTYPE)) + barplot(sumfatal) + barplot(suminj)
ggplot(subhealth, aes(EVTYPE)) + geom_bar(sumfatal) + geom_bar(suminj)
subhealth
?multiplot
ggplot(subhealth, aes(EVTYPE)) + geom_bar(aes(y=sumfatal)) + geom_bar(aes(y=suminj))
ggplot(subhealth, aes(EVTYPE)) + geom_bar(aes(sumfatal)) + geom_bar(aes(suminj))
ggplot(subhealth, aes(EVTYPE)) + geom_bar(aes(sumfatal))
ggplot(subhealth, aes(EVTYPE, sumfatal)) + geom_bar()
ggplot(subhealth, aes(EVTYPE, sumfatal)) + geom_bar()
ggplot(subhealth, aes(EVTYPE, sumfatal)) + geom_bar(stat = "identity")
plot1 <- ggplot(subhealth, aes(EVTYPE, sumfatal)) + geom_bar(stat = "identity")
plot2 <- ggplot(subhealth, aes(EVTYPE, suminj)) + geom_bar(stat = "identity")
grid.arrange(plot1,plot2)
library(gridExtra)
plot1 <- ggplot(subhealth, aes(EVTYPE, sumfatal)) + geom_bar(stat = "identity")
plot2 <- ggplot(subhealth, aes(EVTYPE, suminj)) + geom_bar(stat = "identity")
grid.arrange(plot1,plot2)
subdamage <- subset(damagedf, sumprodmg > 0.05*damagedf[which.max(damagedf$sumpropdmg),2])
head(damagedf)
subdamage <- subset(damagedf, sumpropdmg > 0.05*damagedf[which.max(damagedf$sumpropdmg),2])
subdamage
plot1 <- ggplot(subdamage, aes(EVTYPE, sumpropdmg)) + geom_bar(stat = "identity")
plot2 <- ggplot(subdamage, aes(EVTYPE, sumcropdmg)) + geom_bar(stat = "identity")
grid.arrange(plot1,plot2)
plot1 <- ggplot(subdamage, aes(EVTYPE, sumpropdmg)) + geom_bar(stat = "identity") + coord_flip()
plot2 <- ggplot(subdamage, aes(EVTYPE, sumcropdmg)) + geom_bar(stat = "identity") + coord_flip()
grid.arrange(plot1,plot2)
plot1 <- ggplot(subdamage, aes(EVTYPE, sumpropdmg)) + geom_bar(stat = "identity") +
xlab("Total property damage") + coord_flip()
plot2 <- ggplot(subdamage, aes(EVTYPE, sumcropdmg)) + geom_bar(stat = "identity") +
xlab("Total crop damage") + coord_flip()
grid.arrange(plot1,plot2)
plot1 <- ggplot(subdamage, aes(EVTYPE, sumpropdmg)) + geom_bar(stat = "identity") +
ylab("Total property damage") + coord_flip()
plot2 <- ggplot(subdamage, aes(EVTYPE, sumcropdmg)) + geom_bar(stat = "identity") +
ylab("Total crop damage") + coord_flip()
grid.arrange(plot1,plot2)
We can see these results in a bar plot:
We can see these results in a bar plot
unique(stormdf$EVTYPE)
names(stormdf)
head(stormdf$MAG)
head(stormdf$PROPDMGEXP)
View(stormdf$PROPDMG[1:20])
stormdf$PROPDMG[1:20]
stormdf$PROPDMGEXP[1:20]
stormdf$CROPDMGEXP[1:20]
table(stormdf$CROPDMGEXP)
table(stormdf$PROPDMGEXP)
aux <- tolower(stormdf$CROPDMGEXP)
table(aux)
stormdf$PROPDMGEXP <- tolower(stormdf$PROPDMGEXP)
table(stormdf$PROPDMGEXP)
index <- grep("b", stormdf$CROPDMGEXP)
index <- stormdf$CROPDMGEXP == "b"
index
stormdf[stormdf$CROPDMGEXP == "b",1:10]
stormdf[stormdf$CROPDMGEXP == "b",]
stormdf[stormdf$CROPDMGEXP == "m",]
table(stormdf$CROPDMGEXP)
table(as.character(stormdf$CROPDMGEXP))
table(as.character(stormdf$CROPDMGEXP)== "b")
stormdf$CROPDMGEXP <- tolower(stormdf$CROPDMGEXP)
table(as.character(stormdf$CROPDMGEXP)== "b")
stormdf$PROPDMGEXP <- tolower(stormdf$PROPDMGEXP)
stormdf[as.character(stormdf$CROPDMGEXP)== "b"),]
stormdf[as.character(stormdf$CROPDMGEXP)== "b",]
stormdf[as.character(stormdf$CROPDMGEXP)== "b","EVTYPE"]
names(stormdf)
source("processing.R")
damagedf[which.max(damagedf$sumpropdmg),1]
damagedf[which.max(damagedf$sumcropdmg),1]
subdamageprop <- subset(damagedf, sumpropdmg > 0.05*damagedf[which.max(damagedf$sumpropdmg),2])
subdamagecrop <- subset(damagedf, sumcropdmg > 0.05*damagedf[which.max(damagedf$sumcropdmg),2])
subdamagecrop <- subset(damagedf, sumcropdmg > 0.01*damagedf[which.max(damagedf$sumcropdmg),2])
subdamagecrop <- subset(damagedf, sumcropdmg > 0.05*damagedf[which.max(damagedf$sumcropdmg),2])
subdamagecrop <- subset(damagedf, sumcropdmg > 0.1*damagedf[which.max(damagedf$sumcropdmg),2])
subdamagecrop <- subset(damagedf, sumcropdmg > 0.15*damagedf[which.max(damagedf$sumcropdmg),2])
subdamagecrop <- subset(damagedf, sumcropdmg > 0.2*damagedf[which.max(damagedf$sumcropdmg),2])
subdamagecrop <- subset(damagedf, sumcropdmg > 0.4*damagedf[which.max(damagedf$sumcropdmg),2])
subdamagecrop <- subset(damagedf, sumcropdmg > 0.6*damagedf[which.max(damagedf$sumcropdmg),2])
subdamagecrop <- subset(damagedf, sumcropdmg > 0.7*damagedf[which.max(damagedf$sumcropdmg),2])
setwd("~/LuisPeraza/DataScienceSpecialization/MachineLearning/FinalProject")
library(caret)
setwd("~/LuisPeraza/DataScienceSpecialization/MachineLearning/ProjectMarkdown")
dir
dir()
library(knitr)
library(markdown)
dir()
library(rmarkdown)
R
